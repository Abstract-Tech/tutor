# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'Ubuntu-16.04'

steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.6'
      architecture: 'x64'

  - script: python setup.py develop || python setup.py develop
    displayName: 'Install tutor'

  - script: |
      tutor config save --silent \
        --set ACTIVATE_NOTES=true \
        --set ACTIVATE_XQUEUE=true \
        --set LMS_HOST=localhost
    displayName: 'Configure tutor'

  - script: tutor local pullimages
    displayName: 'Pull docker images'

  - script: tutor local databases
    displayName: 'Initialize databases'

  - script: tutor local start -d
    displayName: 'Start edX server'

  - script: curl -v http://localhost/
    displayName: 'Run curl command to confirm tutor is running'

  - script: |
      docker-compose -f $(tutor config printroot)/env/local/docker-compose.yml \
      --project-name tutor_local \
      run --rm \
      -v $(pwd)/tests/fixtures/users.json:/openedx/edx-platform/users.json \
      lms \
        bash -e -c \
          './manage.py lms --settings=tutor.production loaddata users.json'
    displayName: 'Create initial users to be used in tests'

  - script: |
      docker build tests/e2e -t cypress:tutor
    displayName: 'Build cypress e2e tests docker image'

  - script: |
      docker run --rm \
        --name cypress \
        --network host \
        -e CYPRESS_baseUrl=http://localhost:80 \
        cypress:tutor \
        npx cypress run
    displayName: 'Run cypress e2e tests'

  - script: echo "We made it to the bottom of the file! Time to celebrate. Go have a pint! (just kidding, keep at it! There's much more work to do)"
    displayName: 'Pat ourselves on the back'
